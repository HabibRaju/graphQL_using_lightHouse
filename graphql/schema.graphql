type Query {

  #User
  users: [User] @paginate,
  user(id: ID @eq): User! @find

  #Product
  products: [Product] @all
}

type Mutation {
  createProduct(name: String!, remaining_product: Int!): Product! @create
  upsertProduct(id: ID, name: String!, remaining_product: Int!): Product! @upsert
  updateProduct(id: ID!, name: String!, remaining_product: Int!): Product! @update
  deleteProduct(id: ID!): Product! @delete
}

type User {
  id: ID
  name: String
}

type Product {
  id: ID
  name: String
  remaining_product: Int
}






















# "A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
# scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

# "Indicates what fields are available at the top level of a query operation."
# type Query {
#     "Find a single user by an identifying attribute."
#     user(
#       "Search by primary key."
#       id: ID 
#       name: String
#       "Search by email address."
#       email: String 
#     ): User @find

#     "List multiple users."
#     users(
#       "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
#       name: String @where(operator: "like")
#     ): [User!]! @paginate(defaultCount: 10)
# }

# "Account of a person who utilizes this application."
# type User {
#     "Unique primary key."
#     id: ID!

#     "Non-unique name."
#     name: String!

#     "Unique email address."
#     email: String!

#     "When the email was verified."
#     email_verified_at: DateTime

#     "When the account was created."
#     created_at: DateTime!

#     "When the account was last updated."
#     updated_at: DateTime!
# }
